apiVersion: v1
kind: Namespace
metadata:
  labels:
    app: #APP_NAME
  name: #APP_NAME
---


apiVersion: v1
data:
  api-token: aGVsbG8NCg==
kind: Secret
metadata:
  annotations:
    reflector.v1.k8s.emberstack.com/reflects: default/cloudflare-api-token-secret
  labels:
    app: #APP_NAME
  name: cloudflare-api-token-secret
  namespace: #APP_NAME
---


apiVersion: v1
kind: Service
metadata:
  labels:
    app: #APP_NAME
    service-type: internal
  name: service
  namespace: #APP_NAME
spec:
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ports:
  - name: #APP_NAME
    port: #APP_PORT
    targetPort: #APP_PORT
  selector:
    app: #APP_NAME
  type: LoadBalancer
---


apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    app: #APP_NAME
  name: nfs-#APP_NAME
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 2000Gi
  nfs:
    path: /nfsshare/apps/#APP_NAME
    server: 10.10.101.210
---


apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: #APP_NAME
  name: nfs
  namespace: #APP_NAME
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Mi
  volumeName: nfs-#APP_NAME
---


apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: #APP_NAME
  name: deploy
  namespace: #APP_NAME
spec:
  replicas: 1
  selector:
    matchLabels:
      app: #APP_NAME
  template:
    metadata:
      labels:
        app: #APP_NAME
    spec:
      containers:
      - image: #APP_IMAGE
        name: container
        ports:
        - containerPort: #APP_PORT
        volumeMounts:
        - mountPath: #PERSIST_PATH
          name: persist
          readOnly: false
      volumes:
      - name: persist
        persistentVolumeClaim:
          claimName: nfs
---


apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  annotations:
    cert-manager.io/cluster-issuer: cloudflare-issuer
  labels:
    app: #APP_NAME
  name: gateway
  namespace: #APP_NAME
spec:
  gatewayClassName: cilium
  infrastructure:
    annotations:
      external-dns.alpha.kubernetes.io/hostname: #APP_NAME.frostbit.in
  listeners:
  - allowedRoutes:
      namespaces:
        from: Same
    name: http
    port: 80
    protocol: HTTP
  - hostname: #APP_NAME.frostbit.in
    name: https
    port: 443
    protocol: HTTPS
    tls:
      certificateRefs:
      - kind: Secret
        name: secret-tls-#APP_NAME
---


apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  labels:
    app: #APP_NAME
  name: route
  namespace: #APP_NAME
spec:
  parentRefs:
  - name: gateway
    namespace: #APP_NAME
  rules:
  - backendRefs:
    - name: service
      port: #APP_PORT
    matches: null
---


apiVersion: networking.cfargotunnel.com/v1alpha1
kind: TunnelBinding
metadata:
  labels:
    app: #APP_NAME
  name: tunnel
  namespace: #APP_NAME
subjects:
- name: gateway
  spec:
    fqdn: #APP_NAME.frostbit.in
    target: http://cilium-gateway-gateway.#APP_NAME.svc.cluster.local:80
tunnelRef:
  kind: ClusterTunnel
  name: k8s-cluster-tunnel